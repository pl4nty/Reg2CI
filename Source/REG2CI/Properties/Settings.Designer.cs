//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace REG2CI.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "17.5.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<DesiredConfigurationDigest xmlns=""http://schemas.microsoft.com/SystemsCenterConfigurationManager/2009/07/10/DesiredConfiguration"">
	<!--Authored against the following schema version: 5-->
	<OperatingSystem AuthoringScopeId=""ScopeId_709B4C9D-07C0-476D-9CF4-2E760FA01892"" LogicalName=""OperatingSystem_e7820aa6-f780-48f8-9e39-34d15446c4d1"" Version=""2"">
		<Annotation xmlns=""http://schemas.microsoft.com/SystemsCenterConfigurationManager/2009/06/14/Rules"">
			<DisplayName Text=""Test CI"" ResourceId=""ID-457b14c0-5df6-4a6b-a693-2f807d31db72""/>
			<Description Text=""Reg2CI (c) 2019 by Roger Zander""/>
		</Annotation>
		<Parts>
			<SuppressionReferences/>
		</Parts>
		<Settings>
			<RootComplexSetting>
			</RootComplexSetting>
		</Settings>
		<Rules>
		</Rules>
		<OperatingSystemDiscoveryRule xmlns=""http://schemas.microsoft.com/SystemsCenterConfigurationManager/2009/06/14/Rules"">
			<OperatingSystemExpression>
				<Operator>OneOf</Operator>
				<Operands>
					<RuleExpression RuleId=""Windows/All_Windows_Client_Server""/>
				</Operands>
			</OperatingSystemExpression>
		</OperatingSystemDiscoveryRule>
	</OperatingSystem>
</DesiredConfigurationDigest>")]
        public string XMLBodyOS {
            get {
                return ((string)(this["XMLBodyOS"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@" <Annotation xmlns=""http://schemas.microsoft.com/SystemsCenterConfigurationManager/2009/06/14/Rules"">
  <DisplayName Text=""{DISPLAYNAME}"" ResourceId=""{RESOURCEID}""/>
  <Description Text=""{DESC}""/>
 </Annotation>
 <RegistryDiscoverySource Hive=""{HIVE}"" Depth=""Base"" Is64Bit=""false"" CreateMissingPath=""true"" xmlns=""http://schemas.microsoft.com/SystemsCenterConfigurationManager/2009/07/10/DesiredConfiguration"">
  <Key>{KEY}</Key>
  <ValueName>{VALUENAME}</ValueName>
 </RegistryDiscoverySource>")]
        public string SimpleSettingReg {
            get {
                return ((string)(this["SimpleSettingReg"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<Annotation xmlns=""http://schemas.microsoft.com/SystemsCenterConfigurationManager/2009/06/14/Rules"">
	<DisplayName Text=""{DISPLAYNAME}"" ResourceId=""{RESOURCEID}""/>
	<Description Text=""""/>
</Annotation>
<Expression xmlns=""http://schemas.microsoft.com/SystemsCenterConfigurationManager/2009/06/14/Rules"">
	<Operator>Equals</Operator>
	<Operands>
		<SettingReference AuthoringScopeId=""{AUTHORINGSCOPEID}"" LogicalName=""{LOGICALNAME}"" Version=""1"" DataType=""{DATATYPE}"" SettingLogicalName=""{SETTINGLOGICALNAME}"" SettingSourceType=""Registry"" Method=""Value"" Changeable=""true""/>
		<ConstantValue Value=""{CONSTANTVALUE}"" DataType=""{DATATYPE}""/>
	</Operands>
</Expression>")]
        public string RuleRegValue {
            get {
                return ((string)(this["RuleRegValue"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<Annotation xmlns=""http://schemas.microsoft.com/SystemsCenterConfigurationManager/2009/06/14/Rules"">
	<DisplayName Text=""{DISPLAYNAME}"" ResourceId=""{RESOURCEID}""/>
	<Description Text=""""/>
</Annotation>
<Expression xmlns=""http://schemas.microsoft.com/SystemsCenterConfigurationManager/2009/06/14/Rules"">
	<Operator>Equals</Operator>
	<Operands>
		<SettingReference AuthoringScopeId=""{AUTHORINGSCOPEID}"" LogicalName=""{LOGICALNAME}"" Version=""1"" DataType=""{DATATYPE}"" SettingLogicalName=""{SETTINGLOGICALNAME}"" SettingSourceType=""Registry"" Method=""Value"" Changeable=""false""/>
		<ConstantValue Value=""{CONSTANTVALUE}"" DataType=""{DATATYPE}""/>
	</Operands>
</Expression>")]
        public string RuleRegExist {
            get {
                return ((string)(this["RuleRegExist"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<DesiredConfigurationDigest xmlns=""http://schemas.microsoft.com/SystemsCenterConfigurationManager/2009/07/10/DesiredConfiguration"">
  <!--Authored against the following schema version: 5-->
  <Application AuthoringScopeId=""ScopeId_709B4C9D-07C0-476D-9CF4-2E760FA01892"" LogicalName=""Application_8ffce5a5-ebed-47ee-88c1-80fdd4504a04"" Version=""1"" Is64Bit=""false"">
    <Annotation xmlns=""http://schemas.microsoft.com/SystemsCenterConfigurationManager/2009/06/14/Rules"">
      <DisplayName Text=""TEST"" ResourceId="""" />
      <Description Text=""Reg2CI (c) 2019 by Roger Zander"" />
    </Annotation>
    <Parts>
      <SuppressionReferences />
    </Parts>
    <Settings>
      <RootComplexSetting />
    </Settings>
	<Rules>
	</Rules>
    <PlatformApplicabilityCondition xmlns=""http://schemas.microsoft.com/SystemsCenterConfigurationManager/2009/06/14/Rules"">
      <OperatingSystemExpression>
        <Operator>OneOf</Operator>
        <Operands>
          <RuleExpression RuleId=""Windows/All_Windows_Client_Server"" />
        </Operands>
      </OperatingSystemExpression>
    </PlatformApplicabilityCondition>
    <ScriptDiscoveryInfo ScriptType=""PowerShell""><Script>$true</Script></ScriptDiscoveryInfo>
  </Application>
</DesiredConfigurationDigest>")]
        public string XMLBodyApp {
            get {
                return ((string)(this["XMLBodyApp"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@" <Annotation xmlns=""http://schemas.microsoft.com/SystemsCenterConfigurationManager/2009/06/14/Rules"">
	<DisplayName Text=""{DISPLAYNAME}"" ResourceId=""{RESOURCEID}""/>
	<Description Text=""{DESC}""/>
 </Annotation>
  <ScriptDiscoverySource Is64Bit=""{X64}"" xmlns=""http://schemas.microsoft.com/SystemsCenterConfigurationManager/2009/07/10/DesiredConfiguration"">
    <DiscoveryScriptBody ScriptType=""PowerShell"">if((Get-ItemProperty -Path '{KEY}' -Name {VALUENAME} -ea SilentlyContinue).{VALUENAME} -eq {TARGETVALUE}) { $true } else { $false }</DiscoveryScriptBody>
    <RemediationScriptBody ScriptType=""PowerShell"">New-Item -Path '{KEY}';
New-ItemProperty -Path '{KEY}' -Name {VALUENAME} -Value {TARGETVALUE} -PropertyType {TARGETTYPE} -Force -ea SilentlyContinue;</RemediationScriptBody>
  </ScriptDiscoverySource>")]
        public string SimpleSettingPS {
            get {
                return ((string)(this["SimpleSettingPS"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<Annotation xmlns=""http://schemas.microsoft.com/SystemsCenterConfigurationManager/2009/06/14/Rules"">
	<DisplayName Text=""{DISPLAYNAME}"" ResourceId=""{RESOURCEID}""/>
	<Description Text=""Reg2CI (c) 2019 by Roger Zander""/>
</Annotation>
<Expression xmlns=""http://schemas.microsoft.com/SystemsCenterConfigurationManager/2009/06/14/Rules"">
	<Operator>Equals</Operator>
	<Operands>
		<SettingReference AuthoringScopeId=""{AUTHORINGSCOPEID}"" LogicalName=""{LOGICALNAME}"" Version=""1"" DataType=""Boolean"" SettingLogicalName=""{SETTINGLOGICALNAME}"" SettingSourceType=""Script"" Method=""Value"" Changeable=""true""/>
		<ConstantValue Value=""True"" DataType=""Boolean""/>
	</Operands>
</Expression>")]
        public string RulePSBool {
            get {
                return ((string)(this["RulePSBool"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@" <Annotation xmlns=""http://schemas.microsoft.com/SystemsCenterConfigurationManager/2009/06/14/Rules"">
	<DisplayName Text=""{DISPLAYNAME}"" ResourceId=""{RESOURCEID}""/>
	<Description Text=""{DESC}""/>
 </Annotation>
  <ScriptDiscoverySource Is64Bit=""{X64}"" xmlns=""http://schemas.microsoft.com/SystemsCenterConfigurationManager/2009/07/10/DesiredConfiguration"">
    <DiscoveryScriptBody ScriptType=""PowerShell"">{PSDISC}</DiscoveryScriptBody>
    <RemediationScriptBody ScriptType=""PowerShell"">{PSREM}</RemediationScriptBody>
  </ScriptDiscoverySource>")]
        public string PSScript {
            get {
                return ((string)(this["PSScript"]));
            }
        }
    }
}
